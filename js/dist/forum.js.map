{"version":3,"sources":["webpack://@the-turk/flarum-diff/webpack/bootstrap","webpack://@the-turk/flarum-diff/./forum.js","webpack://@the-turk/flarum-diff/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@the-turk/flarum-diff/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@the-turk/flarum-diff/./src/forum/components/DiffButton.js","webpack://@the-turk/flarum-diff/./src/forum/components/DiffDropdown.js","webpack://@the-turk/flarum-diff/./src/forum/components/DiffList.js","webpack://@the-turk/flarum-diff/./src/forum/components/DiffModal.js","webpack://@the-turk/flarum-diff/./src/forum/index.js","webpack://@the-turk/flarum-diff/./src/forum/models/Diff.js","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['Component']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['Model']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['app']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['components/Button']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['components/CommentPost']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['components/Dropdown']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['components/EditPostComposer']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['components/Modal']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['extend']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['helpers/avatar']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['helpers/humanTime']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['helpers/icon']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['helpers/username']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['models/Post']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['utils/extractText']\"","webpack://@the-turk/flarum-diff/external \"flarum.core.compat['utils/mixin']\""],"names":["DiffButton","view","attrs","props","item","type","getButtonContent","diff","editedInfo","extractText","app","translator","trans","username","actor","ago","humanTime","createdAt","avatar","Button","DiffDropdown","initProps","className","buttonClassName","menuClassName","label","icon","init","post","largeModal","list","DiffList","getButton","vdom","title","onclick","bind","getMenu","showing","render","load","Dropdown","loading","cache","diffs","pages","id","revisionCount","length","map","items","forEach","push","component","modal","show","DiffModal","LoadingIndicator","m","redraw","postRedrawer","postId","store","find","then","parseResults","results","save","isHidden","Component","data","attributes","route","user","content","trust","contentHtml","Modal","initializers","add","models","Diff","Post","prototype","Model","attribute","canViewEditHistory","extend","CommentPost","isEdited","replace","isEditing","mixin","revision","transformDate","hasOne"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA,wC;;;;;;;;;;;;ACAA;AAAA;AAAe;AACf;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,C;;;;;;;;;;;;AChBA;AAAA;AAAe;AACf;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;IAEqBA,U;;;;;;;;;;;SACnBC,I,GAAA,gBAAO;AACL,QAAMC,KAAK,GAAG,mFAAc,EAAd,EAAkB,KAAKC,KAAvB,CAAd;;AAEA,WAAOD,KAAK,CAACE,IAAb;AAEAF,SAAK,CAACG,IAAN,GAAa,QAAb;AAEA,WAAO,YAAYH,KAAZ,EAAoB,KAAKI,gBAAL,EAApB,CAAP;AACD;AAED;;;;;;;;SAMAA,gB,GAAA,4BAAmB;AACjB,QAAMC,IAAI,GAAG,KAAKJ,KAAL,CAAWC,IAAxB;AACA,QAAMI,UAAU,GAAGC,+DAAW,CAACC,GAAG,CAACC,UAAJ,CAAeC,KAAf,CAC7B,gCAD6B,EAE7B;AAACC,cAAQ,EAAEA,8DAAQ,CAACN,IAAI,CAACO,KAAL,EAAD,CAAnB;AAAmCC,SAAG,EAAEC,+DAAS,CAACT,IAAI,CAACU,SAAL,EAAD;AAAjD,KAF6B,CAAD,CAA9B;AAKA,WAAO,CACLV,IAAI,CAACO,KAAL,GAAaD,QAAb,KAA0BK,4DAAM,CAACX,IAAI,CAACO,KAAL,EAAD,CAAhC,GAAiD,EAD5C,EAEL;AAAM,eAAS,EAAC,cAAhB;AAA+B,WAAK,EAAEN;AAAtC,OACGA,UADH,CAFK,CAAP;AAMD,G;;;EA9BqCW,+D;;;;;;;;;;;;;;;;;;;;;;;ACNxC;AACA;AACA;;IAEqBC,Y;;;;;;;;;eACZC,S,GAAP,mBAAiBlB,KAAjB,EAAwB;AACtBA,SAAK,CAACmB,SAAN,GAAkB,cAAlB;AACAnB,SAAK,CAACoB,eAAN,GAAwB,qBAAxB;AACApB,SAAK,CAACqB,aAAN,GAAsBrB,KAAK,CAACqB,aAA5B;AACArB,SAAK,CAACsB,KAAN,GAAcf,GAAG,CAACC,UAAJ,CAAeC,KAAf,CAAqB,6BAArB,CAAd;AACAT,SAAK,CAACuB,IAAN,GAAa,gBAAb;;AAEA,cAAML,SAAN,YAAgBlB,KAAhB;AACD,G;;;;SAEDwB,I,GAAA,gBAAO;AACL,wBAAMA,IAAN;;AACA,QAAMC,IAAI,GAAG,KAAKzB,KAAL,CAAWyB,IAAxB;AACA,QAAMC,UAAU,GAAG,KAAK1B,KAAL,CAAW0B,UAA9B;AACA,SAAKC,IAAL,GAAY,IAAIC,iDAAJ,CAAa;AAACH,UAAI,EAAJA;AAAD,KAAb,CAAZ;AACD,G;;SAEDI,S,GAAA,qBAAY;AACV,QAAMC,IAAI,uBAASD,SAAT,WAAV;;AAEAC,QAAI,CAAC/B,KAAL,CAAWgC,KAAX,GAAmB,KAAK/B,KAAL,CAAWsB,KAA9B;AACAQ,QAAI,CAAC/B,KAAL,CAAWiC,OAAX,GAAqB,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAArB;AAEA,WAAOH,IAAP;AACD,G;;SAED3B,gB,GAAA,4BAAmB;AACjB,WAAO,CACLoB,0DAAI,CAAC,KAAKvB,KAAL,CAAWuB,IAAZ,EAAkB;AAACJ,eAAS,EAAE;AAAZ,KAAlB,CADC,EAEL;AAAM,eAAS,EAAC;AAAhB,OAAgC,KAAKnB,KAAL,CAAWsB,KAA3C,CAFK,CAAP;AAID,G;;SAEDY,O,GAAA,mBAAU;AACR,WACE;AAAK,eAAS,EAAE,mBAAmB,KAAKlC,KAAL,CAAWqB;AAA9C,OACG,KAAKc,OAAL,GAAe,KAAKR,IAAL,CAAUS,MAAV,EAAf,GAAoC,EADvC,CADF;AAKD,G;;SAEDJ,O,GAAA,mBAAU;AACR,SAAKL,IAAL,CAAUU,IAAV;AACD,G;;;EA5CuCC,iE;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ1C;AACA;AACA;AACA;AACA;AACA;AAEA;;;;IAGqBV,Q;;;;;;;;;;;SACnBJ,I,GAAA,gBAAO;AACL;;;;;AAKA,SAAKe,OAAL,GAAe,KAAf;;AAEA,QAAG,CAAChC,iDAAG,CAACiC,KAAJ,CAAUC,KAAd,EAAqB;AACnB;;;;;AAKAlC,uDAAG,CAACiC,KAAJ,CAAUC,KAAV,GAAkB,EAAlB;AACD;AACF,G;;SAED3C,I,GAAA,gBAAO;AACL,QAAM4C,KAAK,GAAGnC,iDAAG,CAACiC,KAAJ,CAAUC,KAAV,CAAgB,KAAKzC,KAAL,CAAWyB,IAAX,CAAgBkB,EAAhB,EAAhB,KAAyC,EAAvD;AAEA,WACE;AAAK,eAAS,EAAC;AAAf,OACE;AAAK,eAAS,EAAC;AAAf,OACE,cACGpC,iDAAG,CAACC,UAAJ,CAAeC,KAAf,CAAqB,kCAArB,EAAyD;AACxDmC,mBAAa,EAAE,KAAK5C,KAAL,CAAWyB,IAAX,CAAgBmB,aAAhB;AADyC,KAAzD,CADH,CADF,CADF,EASE;AAAK,eAAS,EAAC;AAAf,OACE,cACGF,KAAK,CAACG,MAAN,GAAeH,KAAK,CAACI,GAAN,CAAU,UAAAL,KAAK,EAAI;AACjC,UAAMM,KAAK,GAAG,EAAd;AAEAN,WAAK,CAACO,OAAN,CAAc,UAAA5C,IAAI,EAAI;AACpB2C,aAAK,CAACE,IAAN,CAAW7C,IAAX;AACD,OAFD;AAIA,aAAO2C,KAAK,CAACD,GAAN,CAAU,UAAA7C,IAAI,EAAI;AACvB,eACE;AAAI,mBAAS,EAAC;AAAd,WACGJ,mDAAU,CAACqD,SAAX,CAAqB;AACpBjD,cAAI,EAAJA,IADoB;AAEpB+B,iBAAO,EAAE,mBAAM;AACbzB,6DAAG,CAAC4C,KAAJ,CAAUC,IAAV,CAAe,IAAIC,kDAAJ,CAAc;AAACpD,kBAAI,EAAJA;AAAD,aAAd,CAAf;AACD;AAJmB,SAArB,CADH,CADF;AAUD,OAXM,CAAP;AAYD,KAnBe,CAAf,GAmBI,EApBP,EAuBI,KAAKsC,OAAL,GACEe,yEAAgB,CAACJ,SAAjB,CAA2B;AACzB/B,eAAS,EAAE;AADc,KAA3B,CADF,GAIGuB,KAAK,CAACG,MAAN,GAAe,EAAf,GACC;AAAK,eAAS,EAAC;AAAf,OACGtC,iDAAG,CAACC,UAAJ,CAAeC,KAAf,CAAqB,+BAArB,CADH,CA5BR,CADF,CATF,CADF;AAgDD;AAED;;;;;;;SAKA4B,I,GAAA,gBAAO;AAAA;;AACL,QAAI9B,iDAAG,CAACiC,KAAJ,CAAUC,KAAV,CAAgB,KAAKzC,KAAL,CAAWyB,IAAX,CAAgBkB,EAAhB,EAAhB,CAAJ,EAA2C;AACzCY,OAAC,CAACC,MAAF,GADyC,CAEzC;AACA;;AACA,aAAO,KAAKC,YAAL,EAAP;AACD;;AAED,SAAKlB,OAAL,GAAe,IAAf;AACAgB,KAAC,CAACC,MAAF,GATK,CASO;;AACZ,SAAKC,YAAL;AAEA,QAAMC,MAAM,GAAG,KAAK1D,KAAL,CAAWyB,IAAX,CAAgBkB,EAAhB,EAAf;AAEA,WAAOpC,iDAAG,CAACoD,KAAJ,CAAUC,IAAV,CAAe,MAAf,EAAuBF,MAAvB,EACJG,IADI,CACC,KAAKC,YAAL,CAAkB7B,IAAlB,CAAuB,IAAvB,CADD,WAEE,YAAM,CAAE,CAFV,EAGJ4B,IAHI,CAGC,YAAM;AACV,WAAI,CAACtB,OAAL,GAAe,KAAf;AACAgB,OAAC,CAACC,MAAF,GAFU,CAEE;;AACZ,WAAI,CAACC,YAAL;AACD,KAPI,CAAP;AAQD;AAED;;;;;;;;SAMAK,Y,GAAA,sBAAaC,OAAb,EAAsB;AACpBxD,qDAAG,CAACiC,KAAJ,CAAUC,KAAV,CAAgB,KAAKzC,KAAL,CAAWyB,IAAX,CAAgBkB,EAAhB,EAAhB,IAAwCpC,iDAAG,CAACiC,KAAJ,CAAUC,KAAV,CAAgB,KAAKzC,KAAL,CAAWyB,IAAX,CAAgBkB,EAAhB,EAAhB,KAAyC,EAAjF;AAEA,QAAIoB,OAAO,CAAClB,MAAZ,EAAoBtC,iDAAG,CAACiC,KAAJ,CAAUC,KAAV,CAAgB,KAAKzC,KAAL,CAAWyB,IAAX,CAAgBkB,EAAhB,EAAhB,EAAsCM,IAAtC,CAA2Cc,OAA3C;AAEpB,WAAOA,OAAP;AACD;AAED;;;;;;;SAKAN,Y,GAAA,wBAAe;AACb,WAAO,KAAKzD,KAAL,CAAWyB,IAAX,CAAgBuC,IAAhB,CAAqB;AAAEC,cAAQ,EAAE;AAAZ,KAArB,EAA0CJ,IAA1C,CACL;AAAA,aAAMN,CAAC,CAACC,MAAF,EAAN;AAAA,KADK,CAAP;AAGD,G;;;EA5HmCU,uD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVtC;AACA;AACA;AACA;AACA;;IAEqBb,S;;;;;;;;;;;SACnB7B,I,GAAA,gBAAO;AACL,qBAAMA,IAAN;AACD,G;;SAEDL,S,GAAA,qBAAY;AACV,QAAMjB,IAAI,GAAG,KAAKF,KAAL,CAAWC,IAAX,CAAgBkE,IAAhB,CAAqBC,UAArB,CAAgC1C,UAAhC,GAA6C,OAA7C,GAAuD,QAApE;AACA,WAAO,sBAAsBxB,IAA7B;AACD,G;;SAED6B,K,GAAA,iBAAQ;AACN,WAAO,CACL,KAAK/B,KAAL,CAAWC,IAAX,CAAgBU,KAAhB,GAAwBD,QAAxB,KAAqCK,4DAAM,CAAC,KAAKf,KAAL,CAAWC,IAAX,CAAgBU,KAAhB,EAAD,CAA3C,GAAuE,EADlE,EAELJ,iDAAG,CAACC,UAAJ,CAAeC,KAAf,CAAqB,gCAArB,EAAuD;AACrDC,cAAQ,EACN;AAAG,YAAI,EAAEH,iDAAG,CAAC8D,KAAJ,CAAUC,IAAV,CAAe,KAAKtE,KAAL,CAAWC,IAAX,CAAgBU,KAAhB,EAAf,CAAT;AAAkD,cAAM,EAAE4C,CAAC,CAACc;AAA5D,SACG3D,8DAAQ,CAAC,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,KAAhB,EAAD,CADX,CAFmD;AAKrDC,SAAG,EAAEC,+DAAS,CAAC,KAAKb,KAAL,CAAWC,IAAX,CAAgBa,SAAhB,EAAD;AALuC,KAAvD,CAFK,CAAP;AAUD,G;;SAEDyD,O,GAAA,mBAAU;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WACE;AAAK,eAAS,EAAC;AAAf,OACGhB,CAAC,CAACiB,KAAF,CAAQ,KAAKxE,KAAL,CAAWC,IAAX,CAAgBkE,IAAhB,CAAqBC,UAArB,CAAgCK,WAAxC,CADH,CADF;AAKD,G;;;EArCoCC,8D;;;;;;;;;;;;;;ACNvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAnE,iDAAG,CAACoE,YAAJ,CAAiBC,GAAjB,CAAqB,eAArB,EAAsC,YAAM;AAC1CrE,mDAAG,CAACoD,KAAJ,CAAUkB,MAAV,CAAiBzE,IAAjB,GAAwB0E,oDAAxB;AACAC,2DAAI,CAACC,SAAL,CAAepC,aAAf,GAA+BqC,mDAAK,CAACC,SAAN,CAAgB,eAAhB,CAA/B;AACAH,2DAAI,CAACC,SAAL,CAAeG,kBAAf,GAAoCF,mDAAK,CAACC,SAAN,CAAgB,oBAAhB,CAApC;AAEAE,8DAAM,CAACC,oEAAW,CAACL,SAAb,EAAwB,aAAxB,EAAuC,UAASjC,KAAT,EAAgB;AAC3D,QAAMtB,IAAI,GAAG,KAAKzB,KAAL,CAAWyB,IAAxB,CAD2D,CAG3D;;AACA,QAAIA,IAAI,CAAC6D,QAAL,MAAmB,CAAC7D,IAAI,CAACwC,QAAL,EAApB,IACKxC,IAAI,CAAC0D,kBAAL,EADL,IACkC1D,IAAI,CAACmB,aAAL,KAAuB,CAD7D,EACgE;AAC9DG,WAAK,CAACwC,OAAN,CAAc,QAAd,EAAwBtE,gEAAY,CAACiC,SAAb,CAAuB;AAACzB,YAAI,EAAJA;AAAD,OAAvB,CAAxB;AACD,KAP0D,CAS3D;;;AACA,QAAG,KAAK+D,SAAL,MAAoBjF,iDAAG,CAACiC,KAAJ,CAAUC,KAA9B,IACMlC,iDAAG,CAACiC,KAAJ,CAAUC,KAAV,CAAgB,KAAKzC,KAAL,CAAWyB,IAAX,CAAgBkB,EAAhB,EAAhB,CADT,EACgD;AAC9C,aAAOpC,iDAAG,CAACiC,KAAJ,CAAUC,KAAV,CAAgB,KAAKzC,KAAL,CAAWyB,IAAX,CAAgBkB,EAAhB,EAAhB,CAAP;AACD;AACF,GAdK,CAAN;AAeD,CApBD,E;;;;;;;;;;;;;;;;;;;;ACRA;AACA;;IAEqBmC,I;;;;;;;;;;EAAaW,yDAAK,CAACR,mDAAD,EAAQ;AAC3CS,UAAQ,EAAET,mDAAK,CAACC,SAAN,CAAgB,UAAhB,CADiC;AAE3CpE,WAAS,EAAEmE,mDAAK,CAACC,SAAN,CAAgB,WAAhB,EAA6BD,mDAAK,CAACU,aAAnC,CAFgC;AAG3ChF,OAAK,EAAEsE,mDAAK,CAACW,MAAN,CAAa,OAAb,CAHoC;AAI3CnB,aAAW,EAAEQ,mDAAK,CAACC,SAAN,CAAgB,aAAhB,CAJ8B;AAK3CxD,YAAU,EAAEuD,mDAAK,CAACC,SAAN,CAAgB,YAAhB;AAL+B,CAAR,C;;;;;;;;;;;;;ACHvC,iD;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,yD;;;;;;;;;;;ACAA,8D;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,mE;;;;;;;;;;;ACAA,mE;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,yD;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,yD;;;;;;;;;;;ACAA,mD","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./forum.js\");\n","export * from './src/forum';","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Button from 'flarum/components/Button';\r\nimport avatar from 'flarum/helpers/avatar';\r\nimport username from 'flarum/helpers/username';\r\nimport humanTime from 'flarum/helpers/humanTime';\r\nimport extractText from 'flarum/utils/extractText';\r\n\r\nexport default class DiffButton extends Button {\r\n  view() {\r\n    const attrs = Object.assign({}, this.props);\r\n\r\n    delete attrs.item;\r\n\r\n    attrs.type = 'button';\r\n\r\n    return <button {...attrs}>{this.getButtonContent()}</button>;\r\n  }\r\n\r\n  /**\r\n   * Get the template for the button's content.\r\n   *\r\n   * @return {*}\r\n   * @protected\r\n   */\r\n  getButtonContent() {\r\n    const diff = this.props.item;\r\n    const editedInfo = extractText(app.translator.trans(\r\n      'core.forum.post.edited_tooltip',\r\n      {username: username(diff.actor()), ago: humanTime(diff.createdAt())}\r\n    ));\r\n\r\n    return [\r\n      diff.actor().username() ? avatar(diff.actor()) : '',\r\n      <span className=\"Button-label\" title={editedInfo}>\r\n        {editedInfo}\r\n      </span>\r\n    ];\r\n  }\r\n}\r\n","import Dropdown from 'flarum/components/Dropdown';\r\nimport DiffList from './DiffList';\r\nimport icon from 'flarum/helpers/icon';\r\n\r\nexport default class DiffDropdown extends Dropdown {\r\n  static initProps(props) {\r\n    props.className = 'DiffDropdown';\r\n    props.buttonClassName = 'Button Button--link';\r\n    props.menuClassName = props.menuClassName;\r\n    props.label = app.translator.trans('core.forum.post.edited_text');\r\n    props.icon = 'fas fa-history';\r\n\r\n    super.initProps(props);\r\n  }\r\n\r\n  init() {\r\n    super.init();\r\n    const post = this.props.post;\r\n    const largeModal = this.props.largeModal;\r\n    this.list = new DiffList({post});\r\n  }\r\n\r\n  getButton() {\r\n    const vdom = super.getButton();\r\n\r\n    vdom.attrs.title = this.props.label;\r\n    vdom.attrs.onclick = this.onclick.bind(this);\r\n\r\n    return vdom;\r\n  }\r\n\r\n  getButtonContent() {\r\n    return [\r\n      icon(this.props.icon, {className: 'Button-icon'}),\r\n      <span className=\"Button-label\">{this.props.label}</span>\r\n    ];\r\n  }\r\n\r\n  getMenu() {\r\n    return (\r\n      <div className={'Dropdown-menu ' + this.props.menuClassName}>\r\n        {this.showing ? this.list.render() : ''}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onclick() {\r\n    this.list.load();\r\n  }\r\n}\r\n","import app from 'flarum/app';\r\nimport Component from 'flarum/Component';\r\nimport DiffButton from './DiffButton';\r\nimport DiffModal from './DiffModal';\r\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\r\nimport EditPostComposer from 'flarum/components/EditPostComposer';\r\n\r\n/**\r\n * The `DiffList` component displays a list of the post's diffs.\r\n */\r\nexport default class DiffList extends Component {\r\n  init() {\r\n    /**\r\n     * Whether or not the diffs are loading.\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    this.loading = false;\r\n\r\n    if(!app.cache.diffs) {\r\n      /**\r\n       * Initialize the cache.\r\n       *\r\n       * @type {Array}\r\n       */\r\n      app.cache.diffs = [];\r\n    }\r\n  }\r\n\r\n  view() {\r\n    const pages = app.cache.diffs[this.props.post.id()] || [];\r\n\r\n    return (\r\n      <div className=\"DiffList\">\r\n        <div className=\"DiffList-header\">\r\n          <h4>\r\n            {app.translator.trans('the-turk-diff.forum.revisionInfo', {\r\n              revisionCount: this.props.post.revisionCount()\r\n            })}\r\n          </h4>\r\n        </div>\r\n\r\n        <div className=\"DiffList-content\">\r\n          <ul>\r\n            {pages.length ? pages.map(diffs => {\r\n              const items = [];\r\n\r\n              diffs.forEach(diff => {\r\n                items.push(diff);\r\n              });\r\n\r\n              return items.map(item => {\r\n                return (\r\n                  <li className=\"Diff\">\r\n                    {DiffButton.component({\r\n                      item,\r\n                      onclick: () => {\r\n                        app.modal.show(new DiffModal({item}))\r\n                      }\r\n                    })}\r\n                  </li>\r\n                );\r\n              });\r\n            }) : ''}\r\n\r\n            {\r\n              this.loading ?\r\n                LoadingIndicator.component({\r\n                  className: 'LoadingIndicator--block'\r\n                })\r\n              : (pages.length ? '' :\r\n                  <div className=\"DiffList-empty\">\r\n                    {app.translator.trans('the-turk-diff.forum.emptyText')}\r\n                  </div>\r\n                )\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load diff results.\r\n   *\r\n   * @public\r\n   */\r\n  load() {\r\n    if (app.cache.diffs[this.props.post.id()]) {\r\n      m.redraw();\r\n      // also redraw the post because it sometimes\r\n      // appears and sometimes doesn't after editing a post\r\n      return this.postRedrawer();\r\n    }\r\n\r\n    this.loading = true;\r\n    m.redraw(); // redraw for this view()\r\n    this.postRedrawer();\r\n\r\n    const postId = this.props.post.id();\r\n\r\n    return app.store.find('diff', postId)\r\n      .then(this.parseResults.bind(this))\r\n      .catch(() => {})\r\n      .then(() => {\r\n        this.loading = false;\r\n        m.redraw(); // redraw for this view()\r\n        this.postRedrawer();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Parse results and append them to the diff list.\r\n   *\r\n   * @param {Diff[]} results\r\n   * @return {Diff[]}\r\n   */\r\n  parseResults(results) {\r\n    app.cache.diffs[this.props.post.id()] = app.cache.diffs[this.props.post.id()] || [];\r\n\r\n    if (results.length) app.cache.diffs[this.props.post.id()].push(results);\r\n\r\n    return results;\r\n  }\r\n\r\n  /**\r\n   * Redraw the post.\r\n   * Workaround for:\r\n   * https://discuss.flarum.org/d/22755-mithril-related-issues-on-poststream-items\r\n   */\r\n  postRedrawer() {\r\n    return this.props.post.save({ isHidden: false }).then(\r\n      () => m.redraw()\r\n    );\r\n  }\r\n}\r\n","import app from 'flarum/app';\r\nimport Modal from 'flarum/components/Modal';\r\nimport username from 'flarum/helpers/username';\r\nimport humanTime from 'flarum/helpers/humanTime';\r\nimport avatar from 'flarum/helpers/avatar';\r\n\r\nexport default class DiffModal extends Modal {\r\n  init() {\r\n    super.init();\r\n  }\r\n\r\n  className() {\r\n    const type = this.props.item.data.attributes.largeModal ? 'large' : 'medium';\r\n    return 'DiffModal Modal--' + type;\r\n  }\r\n\r\n  title() {\r\n    return [\r\n      this.props.item.actor().username() ? avatar(this.props.item.actor()) : '',\r\n      app.translator.trans('core.forum.post.edited_tooltip', {\r\n        username:\r\n          <a href={app.route.user(this.props.item.actor())} config={m.route}>\r\n            {username(this.props.item.actor())}\r\n          </a>,\r\n        ago: humanTime(this.props.item.createdAt())\r\n      })\r\n    ];\r\n  }\r\n\r\n  content() {\r\n    // do we need to worry about m.trust() function?\r\n    // well, Flarum itself doing the same way for rendering\r\n    // post items as seen on:\r\n    // https://github.com/flarum/core/blob/afe06ea750cfd81767461a3884a92a26f0b0ce37/js/src/forum/components/CommentPost.js#L52\r\n    // also, the diff library itself treat all inputs as plain text\r\n    // just before creating JSON data:\r\n    // https://github.com/jfcherng/php-diff/issues/9#issuecomment-526808774\r\n    // so no need to use additional Sanitizer lib for this operation.\r\n    return (\r\n      <div className=\"Modal-body\">\r\n        {m.trust(this.props.item.data.attributes.contentHtml)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import app from 'flarum/app';\r\nimport {extend} from 'flarum/extend';\r\nimport CommentPost from 'flarum/components/CommentPost';\r\nimport Diff from './models/Diff';\r\nimport Post from 'flarum/models/Post';\r\nimport Model from 'flarum/Model';\r\nimport DiffDropdown from './components/DiffDropdown';\r\n\r\napp.initializers.add('the-turk/diff', () => {\r\n  app.store.models.diff = Diff;\r\n  Post.prototype.revisionCount = Model.attribute('revisionCount');\r\n  Post.prototype.canViewEditHistory = Model.attribute('canViewEditHistory');\r\n\r\n  extend(CommentPost.prototype, 'headerItems', function(items) {\r\n    const post = this.props.post;\r\n\r\n    // replace \"edited\" text to \"edited\" button\r\n    if (post.isEdited() && !post.isHidden()\r\n          && post.canViewEditHistory() && post.revisionCount() > 0) {\r\n      items.replace('edited', DiffDropdown.component({post}));\r\n    }\r\n\r\n    // remove diffs cache when post is editing\r\n    if(this.isEditing() && app.cache.diffs\r\n          && app.cache.diffs[this.props.post.id()]) {\r\n      delete app.cache.diffs[this.props.post.id()];\r\n    }\r\n  });\r\n});\r\n","import Model from 'flarum/Model';\r\nimport mixin from 'flarum/utils/mixin';\r\n\r\nexport default class Diff extends mixin(Model, {\r\n    revision: Model.attribute('revision'),\r\n    createdAt: Model.attribute('createdAt', Model.transformDate),\r\n    actor: Model.hasOne('actor'),\r\n    contentHtml: Model.attribute('contentHtml'),\r\n    largeModal: Model.attribute('largeModal'),\r\n}) {}\r\n","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['components/Dropdown'];","module.exports = flarum.core.compat['components/EditPostComposer'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['helpers/humanTime'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['models/Post'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['utils/mixin'];"],"sourceRoot":""}